<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="menuMapper">
    <!-- 1뎁스메뉴 리스트 -->
    <select id="getOneDptList" parameterType="Map" resultType="HashMap">
        SELECT A.*,
            (SELECT COUNT (*)  FROM MENU_INFO   WHERE USE_YN = 'Y'  )   AS CNT
        FROM MENU_INFO A
        WHERE USE_YN = 'Y'
        <if test="ONE_DEPTH_ID !=null and ONE_DEPTH_ID !=''">
        AND MENU_ID = #{ONE_DEPTH_ID}
        </if>
        <if test="TOP_YN !=null and TOP_YN !=''">
        AND TOP_YN = #{TOP_YN}
        </if>
        <if test='MENU_AUTH_YN == "Y"'>
        AND MENU_ID IN (
                        SELECT DISTINCT MENU_ID FROM AUTH_MENU C
                        WHERE AUTH_CD = #{AUTH_CD}
                        )
        </if>
        AND MENU_LEVEL = '1'
        ORDER BY MENU_ORD, MENU_ID
    </select>
    <!-- 전체 트리 구조 -->
    <select id="getAllTreeList" parameterType="Map" resultType="HashMap">
        SELECT LEVEL, A.*
        FROM MENU_INFO A
		CONNECT BY  PRIOR MENU_ID =  MENU_SPIR_ID
		<choose>
            <when test="ONE_DEPTH_ID != null and ONE_DEPTH_ID !=''">
            START WITH MENU_ID =  #{ONE_DEPTH_ID}
            </when>
            <otherwise>
            START WITH MENU_LEVEL =  1 
            </otherwise>
        </choose>
		ORDER SIBLINGS BY MENU_LEVEL, MENU_ORD , MENU_ID
    </select>
    <!-- 메뉴 리스트 -->
    <select id="getList" parameterType="Map" resultType="HashMap">
        SELECT A.*, DECODE (MENU_ID, LEAD (MENU_SPIR_ID) OVER (ORDER BY TO_NUMBER(MENU_ID)), 1, 0) IS_DIR
         FROM MENU_INFO A WHERE DMNMST_ID = #{DMNMST_ID} AND USE_YN = 'Y'
        <if test="MENU_LEVEL !=null and MENU_LEVEL !=''">
        AND MENU_LEVEL = #{MENU_LEVEL}
        </if>
        <if test="MENU_SPIR_ID !=null and MENU_SPIR_ID !=''">
        AND MENU_SPIR_ID = #{MENU_SPIR_ID}
        </if>
        ORDER BY MENU_ORD, MENU_ID
    </select>
    <!-- 메뉴 경로 정보 -->
    <select id="getThisLocationList" parameterType="Map" resultType="HashMap">
        SELECT LEVEL,  A.*
        FROM MENU_INFO A WHERE USE_YN = 'Y'
        CONNECT BY PRIOR MENU_SPIR_ID=MENU_ID  AND USE_YN = 'Y'
        START WITH MENU_ID = #{MENU_SPIR_ID}
        ORDER BY LEVEL DESC
    </select>
    <!-- 메뉴 상세 정보 -->
    <select id="getMenu" parameterType="Map" resultType="HashMap">
        SELECT * FROM MENU_INFO
        WHERE MENU_ID = #{MENU_ID}
    </select>    
    <!-- 메뉴 등록 -->
    <insert id="insertMenu" parameterType="Map">
        <selectKey keyProperty="MENU_ID" resultType="int" order="BEFORE">
            SELECT NVL(MAX(MENU_ID),0)+1  FROM  MENU_INFO
        </selectKey>
        INSERT INTO MENU_INFO (
        MENU_ID, MENU_NM, MENU_TYP, MENU_SPIR_ID, MENU_LEVEL, 
        MENU_URL, MENU_ORD,  
        USE_YN,REG_ID, REG_DT, TOP_YN
        )
        VALUES (
        #{MENU_ID}, #{MENU_NM}, #{MENU_TYP}, NVL(#{MENU_SPIR_ID},0), #{MENU_LEVEL}, 
        #{MENU_URL}, NVL(#{MENU_ORD},1), 
        NVL(#{USE_YN},'N'), #{REG_ID}, TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS'), #{TOP_YN}
        )
    </insert>
    <!-- 메뉴 수정 -->
    <update id="updateMenu" parameterType="Map">
	    UPDATE MENU_INFO
	    SET
	           MENU_NM  = #{MENU_NM},
	           MENU_TYP = #{MENU_TYP},
	           MENU_URL = #{MENU_URL},
	           USE_YN   = #{USE_YN},
	           CHG_ID   = #{CHG_ID},
	           CHG_DT   = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS'),
	           TOP_YN   = #{TOP_YN}
	    WHERE  MENU_ID = #{MENU_ID}
    </update>
    <!-- 메뉴 삭제 -->
    <delete id="deleteMenu" parameterType="Map">
	    DELETE MENU_INFO
	    WHERE  MENU_ID = #{MENU_ID}
    </delete>
    <!-- 메뉴 순서 변경 -->
    <update id="updateOrder" parameterType="Map">
	    UPDATE MENU_INFO
	    SET MENU_ORD = #{MENU_ORD}
	    WHERE  MENU_ID = #{MENU_ID}
    </update>
    <!-- 메뉴 트리구조 조회 -->
    <select id="getTreeList" parameterType="Map" resultType="HashMap">
        SELECT AA.*, (SELECT COUNT(*) FROM MENU_INFO WHERE MENU_SPIR_ID=AA.MENU_ID AND USE_YN = 'Y')  AS CNT
        FROM  (
            SELECT LEVEL, A.*
              FROM MENU_INFO A
             WHERE USE_YN = 'Y'
             <if test="MENU_LEVEL !=null and MENU_LEVEL !=''">
                AND MENU_LEVEL IN
                <foreach collection="MENU_LEVEL" item="item" open="(" close=")" separator=",">
                    ${item}
                </foreach>
            </if>
            <if test='MENU_AUTH_YN == "Y"'>
                AND MENU_ID IN (
                                    SELECT DISTINCT MENU_ID FROM AUTH_MENU C
                                    WHERE AUTH_CD = #{AUTH_CD}
                                    )
            </if>  
            CONNECT BY  PRIOR MENU_ID =  MENU_SPIR_ID AND USE_YN = 'Y'
            START WITH MENU_ID= #{MENU_ID}
            ORDER SIBLINGS BY MENU_LEVEL, MENU_ORD, MENU_ID
        ) AA
    </select>
	<!-- 하위 메뉴 찾기 -->
	<select id="getChildMenu" parameterType="Map" resultType="HashMap">
        SELECT /*+ INDEX_ASC (A IDX_MENU_INFO_01) */  * FROM MENU_INFO A
        WHERE MENU_SPIR_ID = #{MENU_ID}
        AND USE_YN = 'Y'
        AND ROWNUM  = 1
       <if test='MENU_AUTH_YN =="Y"'>
       AND MENU_ID IN (
                           SELECT DISTINCT MENU_ID FROM AUTH_MENU C
                           WHERE AUTH_CD = #{AUTH_CD}
                           )
       </if>                            
    </select>
</mapper>
